#!/usr/bin/env bash

source ./bin/init-env

docker-compose stop & \
sleep 1 && \
yes | docker-compose rm & \
sleep 1 && \
docker image rm ${SERVICE_NAME}/ci:${VERSION} > /dev/null 2>&1

images=(
  ${SERVICE_NAME}-development
)

for image in "${images[@]}"
do
  docker image ls | grep ${image} | grep ${VERSION} 1> /dev/null
  if [[ $? = 1 ]]; then
    echo "image [${image}] removed!"
  else
    echo "Removing [${image}]..."
    docker image rm ${image}:${VERSION} 1> /dev/null
  fi
done

volumes=(
  ${DIR_NAME}_db-data
  ${DIR_NAME}_rails-cache
  ${DIR_NAME}_redis-data
)

for volume in "${volumes[@]}"
do
  docker volume ls | grep ${volume} 1> /dev/null
  if [[ $? = 1 ]]; then
    echo "Volume [${volume}] removed!"
  else
    echo "Removing [${volume}]..."
    docker volume rm ${volume} 1> /dev/null
  fi
done

docker network ls | grep ${DIR_NAME}_default 1> /dev/null
if [[ $? = 1 ]]; then
  echo "Network Removed!"
else
  echo "Removing Network"
  docker network rm ${DIR_NAME}_default 1> /dev/null
fi