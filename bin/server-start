#!/usr/bin/env bash

source ./bin/init-env

if [ $# -eq 0 ]
  then
    echo "need to provide the target platform"
    echo "e.g: ./show-logs dev"
    exit 1
fi

possible_values=("prod" "dev")

if [[ ! " $1 " =~ " ${target} " ]]; then
  echo "target should be either: prod or dev"
  exit 1
fi

./bin/services-start

case "$1" in
  'prod')
    docker run --rm --detach \
      --name ${SERVICE_NAME}-prod-app \
      --env REDIS_URL=redis://${SERVICE_NAME}-redis:6379/1 \
      --env DATABASE_URL="mysql2://mysql_user:mysql_password@${SERVICE_NAME}-db:3306/${SERVICE_NAME}_production" \
      --env RAILS_LOG_TO_STDOUT=true \
      --env LOG_LEVEL=debug \
      --network ${SERVICE_NAME}-bridge-docker-network \
      --publish 3010:3000 \
      ${SERVICE_NAME}/prod:latest sh -c 'rm -f tmp/pids/server.pid && bin/rails server -p 3000 --early-hints -b 0.0.0.0' && \
      ./bin/show-logs prod
  ;;
  'dev')
    docker run --rm --detach \
      --name ${SERVICE_NAME}-dev-app \
      --env REDIS_URL=redis://${SERVICE_NAME}-redis:6379/1 \
      --env DATABASE_URL="mysql2://mysql_user:mysql_password@${SERVICE_NAME}-db:3306/${SERVICE_NAME}_development" \
      --env RAILS_LOG_TO_STDOUT=true \
      --env LOG_LEVEL=debug \
      --network ${SERVICE_NAME}-bridge-docker-network \
      --publish 3005:3000 \
      ${SERVICE_NAME}/dev:latest sh -c 'rm -f tmp/pids/server.pid && bin/rails server -p 3000 --early-hints -b 0.0.0.0' && \
      ./bin/show-logs dev
  ;;
esac
